name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  java-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.8

      - name: Build & Run Java tests
        run: ./gradlew build assembleAndroidTest

      - name: Junit Report to Annotations
        uses: turpif/junit-report-annotations-action@v2.0.1
        if: failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          name: "Java JUnit Report"

      - name: Upload JUnit report
        uses: actions/upload-artifact@main
        if: failure()
        with:
          name: junit-report
          path: "**/build/reports/tests"

  android-tests:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.8

      - name: Run Android tests
        uses: malinskiy/action-android/emulator-run-cmd@release/0.0.8
        with:
          api: 29
          tag: google_apis
          cmd: ./gradlew gordon

      - name: Upload logcat output
        uses: actions/upload-artifact@main
        if: failure()
        with:
          name: logcat
          path: artifacts/logcat.log

      - name: Junit Report to Annotations
        uses: turpif/junit-report-annotations-action@v2.0.1
        if: failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: "**/test-results/**/*.xml"
          name: "Android JUnit Report"

      - name: Upload JUnit report
        uses: actions/upload-artifact@main
        if: failure()
        with:
          name: junit-report
          path: "**/build/reports/"

  deploy-development-artifacts:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    needs:
      - java-tests
      - android-tests

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.0.8

      - name: Deploy artifacts
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_SECRING_GPG_BASE64: ${{ secrets.MAVEN_SECRING_GPG_BASE64 }}
        run: ./gradlew publishReleasePublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository sendReleaseDeployedToBintrayMessageToSlack